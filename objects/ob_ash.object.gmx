<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_ash_up</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 30 * (5 + irandom(5));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_meeting(x, y, encounter){
    global.ash_x = x;
    global.ash_y = y;
    room_goto(battleRoom);
}
else {
    alarm[0] = 30 * (5 + irandom(5));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Pokemon movement
step_size = 4;
def_image_speed = 0.3;

if place_meeting(x, y, goToPlayfield) {
    room_goto(playfieldMain);
}
else if place_meeting(x, y, goToEncounterMap) {
    room_goto(encounterRoom);
}
else if place_meeting(x, y, transition) {
    global.ash_x = x;
    global.ash_y = y;
    global.transitioning = true;
    room_goto(battleRoom);
}

up_pressed = keyboard_check(vk_up);
down_pressed = keyboard_check(vk_down);
left_pressed = keyboard_check(vk_left);
right_pressed = keyboard_check(vk_right);

up_collision = place_meeting(x, y-sprite_height, ob_collidable);
down_collision = place_meeting(x, y+sprite_width, ob_collidable);
left_collision = place_meeting(x-sprite_width, y, ob_collidable);
right_collision = place_meeting(x+sprite_width, y, ob_collidable);

moving = (vspeed != 0) or (hspeed != 0);

if (not(up_pressed or down_pressed or left_pressed or right_pressed) or moving){
    if(place_snapped(32, 32)){
        image_speed = 0;
        image_index = 0;
        hspeed = 0;
        vspeed = 0;
        moving = false;
    }
}

if(up_pressed and not(down_pressed or left_pressed or right_pressed) and not moving){
    if(not up_collision){
        vspeed = -step_size;
        hspeed = 0;
    }    
    if(sprite_index != sp_ash_up)
        sprite_index = sp_ash_up;
}else if(down_pressed and not(up_pressed or left_pressed or right_pressed) and not moving){
    if(not down_collision){
        vspeed = step_size;
        hspeed = 0;
    }
    if(sprite_index != sp_ash_down)
        sprite_index = sp_ash_down;
}else if(left_pressed and not(down_pressed or up_pressed or right_pressed) and not moving){
    if (not left_collision){
        hspeed = -step_size;
        vspeed = 0;
    }
    if(sprite_index != sp_ash_left)
        sprite_index = sp_ash_left;
}else if(right_pressed and not(down_pressed or left_pressed or up_pressed) and not moving){
    if (not right_collision){
        hspeed = step_size;
        vspeed = 0;
    }
    if(sprite_index != sp_ash_right)
        sprite_index = sp_ash_right;
}

// keep playing image loop while moving
if (vspeed != 0 or hspeed != 0){
    image_speed = def_image_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
