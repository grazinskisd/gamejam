<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(Snd_Battle,1,false);

globalvar myPkmn;
globalvar opponentPkmn;

stage = "foe_appears";

draw_skip = true;
alive = true;
selected_skill = 0;

turn = 0;                // Defines whose turn it is. 0 = Ash, 1 = oponent
hit_selection = 0         // Index of currently selected attack

myPkmn = "TOTODILE";
opponentPkmn = "PIDGEY"; // remove when game is ready;

my_hp = 50;
enemy_hp = 35 + irandom(35);

attack1[0] = "SCRATCH";
attack1[1] = "THRASH";

attack2[0] = "FLY";
attack2[1] = "SMASH";

str = 0;

text[0] = "A wild " + opponentPkmn + " appears!";
text[1] = "Go! " + myPkmn + "!";
text[2] = "Foe " + opponentPkmn + " fainted!";

sstring = "";            // string to be printed





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

 if str &lt; string_length(sstring) {
  str += .5;                 // speed of text
 }
 if str &gt;= string_length(sstring){
  draw_skip = true;
  if keyboard_check_pressed(ord('Z')) {
   str = 0;
   draw_skip = false;

   // go to next stage
   switch (stage) {
    case "foe_appears":
     alive = true;
     //enemy_hp = 35 + irandom(35);
     stage = "i_appear";
     break;
    case "i_appear":
     stage = "select_skill";
     break;
    case "select_skill":
     stage = "play_attack"
     selected_skill = hit_selection;
 
     // deal damage
     damage = 15 + irandom(40);
     enemy_hp = enemy_hp - damage;
     if enemy_hp &lt;= 0 {
      alive = false;
     }
     break;
    case "play_attack":
     if damage &lt;= 22 or damage &gt;= 48 { 
      stage = "display_results";
     }
     else if alive {
      stage = "enemy_atacks";
     }
     else {
      stage = "won";
     }
     break;
    case "display_results":
     if alive {
      // select attack
      enemy_attack_selector = irandom(1);
      stage = "enemy_attacks";
     }
     else {
      stage = "won";
     }
     break;    
    case "enemy_attacks":
     // deal damage
     damage = 10 + irandom(20);
     if damage &gt; my_hp - 10 {
      damage = my_hp - 10;
     }
     my_hp = my_hp - damage;
     if damage &lt;= 15 {
      stage = "display_enemy_results";
     }
     else {
      stage = "select_skill";
     }
     break;
    case "display_enemy_results":
     stage = "select_skill";
     break;
    case "won": // for debugging
     stage = "foe_appears";
     break;
   }
  }
 } else {
  draw_skip = false;
  if keyboard_check_direct(ord('Z')) &amp;&amp; (str &lt; string_length(sstring)){
   str += 1.5;
  }
 }
 
 
 if keyboard_check_pressed(ord('Z')) {
   audio_play_sound(Snd_Button2,2,false);
 }
 
 
if (keyboard_check_pressed(vk_up) &amp;&amp; !keyboard_check_pressed(vk_down))
 or (keyboard_check_pressed(vk_down) &amp;&amp; !keyboard_check_pressed(vk_up)) {
 hit_selection = 1 - hit_selection;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(Ft_Pokemon_30);
c_grey_dark = make_color_rgb(96,96,96);
c_grey_light = make_color_rgb(208,208,208);


if stage = "foe_appears" {
 // draw opponent name
 draw_text_colour(176, 73, opponentPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw opponent
 draw_sprite_ext(Spr_Battle_Pidgey2,0,736,192,5,5,0,c_white,1);
 
 // draw opponent intro text
 sstring = text[0];
 draw_text_colour(67, 503, string_copy(text[0],0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);           // draws the shadow before the main text
 draw_text_colour(67, 500, string_copy(text[0],0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
 draw_text_colour(64, 503, string_copy(text[0],0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
 draw_text_colour(64, 500, string_copy(text[0],0,str),c_white,c_white,c_white,c_white,1);                           // so the main text will be in front

 // draw skip button
 draw_sprite_ext(Spr_Skip_Text,image_index/4,x+880,562,1,1,0,c_white,1);
}


if stage = "i_appear" {
 // draw opponent name
 draw_text_colour(176, 73, opponentPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw opponent
 draw_sprite_ext(Spr_Battle_Pidgey2,0,736,192,5,5,0,c_white,1);
 
 // draw me
 draw_text_colour(662, 302, myPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw my name
 draw_sprite_ext(Spr_Battle_Wani1,0,256,386,5,5,0,c_white,1);
 
 // draw my intro text
 sstring = text[1];
 draw_text_colour(67, 503, string_copy(text[1],0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);           // draws the shadow before the main text
 draw_text_colour(67, 500, string_copy(text[1],0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
 draw_text_colour(64, 503, string_copy(text[1],0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
 draw_text_colour(64, 500, string_copy(text[1],0,str),c_white,c_white,c_white,c_white,1);                           // so the main text will be in front

 // draw skip button
 draw_sprite_ext(Spr_Skip_Text,image_index/4,x+880,562,1,1,0,c_white,1);
}


if stage = "select_skill" {
 // draw opponent name
 draw_text_colour(176, 73, opponentPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw opponent
 draw_sprite_ext(Spr_Battle_Pidgey2,0,736,192,5,5,0,c_white,1);
 
 // draw me
 draw_text_colour(662, 302, myPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw my name
 draw_sprite_ext(Spr_Battle_Wani1,0,256,386,5,5,0,c_white,1);
 
 // draw text box and skill option sprites
 draw_sprite_ext(Spr_Text_Box,0,4,468,1,1,0,c_white,1);
 draw_sprite(Spr_Skill_Scratch,1-hit_selection,64,480);
 draw_sprite(Spr_Skill_Thrash,hit_selection,64,544);
}


if stage = "play_attack" {
 // draw opponent name
 draw_text_colour(176, 73, opponentPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw opponent
 draw_sprite_ext(Spr_Battle_Pidgey2,0,736,192,5,5,0,c_white,1);
 
 // draw me
 draw_text_colour(662, 302, myPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw my name
 draw_sprite_ext(Spr_Battle_Wani1,0,256,386,5,5,0,c_white,1);

 // draw attack used by you
 attack1_text = myPkmn + " used " + attack1[selected_skill] + "!";
 sstring = attack1_text;
 draw_text_colour(67, 503, string_copy(attack1_text,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);      // draws the shadow before the main text
 draw_text_colour(67, 500, string_copy(attack1_text,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
 draw_text_colour(64, 503, string_copy(attack1_text,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
 draw_text_colour(64, 500, string_copy(attack1_text,0,str),c_white,c_white,c_white,c_white,1);                      // so the main text will be in front
 
 // draw skip button
 draw_sprite_ext(Spr_Skip_Text,image_index/4,x+880,562,1,1,0,c_white,1);
}


if stage = "display_results" {
 // draw opponent name
 draw_text_colour(176, 73, opponentPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw opponent
 draw_sprite_ext(Spr_Battle_Pidgey2,0,736,192,5,5,0,c_white,1);
 
 // draw me
 draw_text_colour(662, 302, myPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw my name
 draw_sprite_ext(Spr_Battle_Wani1,0,256,386,5,5,0,c_white,1);

 // damage feedback 
 if damage &lt;= 22 {
  sstring = "It's not very effective...";
  draw_text_colour(67, 503, string_copy(sstring,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);      // draws the shadow before the main text
  draw_text_colour(67, 500, string_copy(sstring,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
  draw_text_colour(64, 503, string_copy(sstring,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
  draw_text_colour(64, 500, string_copy(sstring,0,str),c_white,c_white,c_white,c_white,1);                      // so the main text will be in front
 }
 else if damage &gt;= 48 {
  sstring = "It's super effective!";
  draw_text_colour(67, 503, string_copy(sstring,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);      // draws the shadow before the main text
  draw_text_colour(67, 500, string_copy(sstring,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
  draw_text_colour(64, 503, string_copy(sstring,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
  draw_text_colour(64, 500, string_copy(sstring,0,str),c_white,c_white,c_white,c_white,1);                      // so the main text will be in front
 }
 
 // draw skip button
 draw_sprite_ext(Spr_Skip_Text,image_index/4,x+880,562,1,1,0,c_white,1);
}


if stage = "enemy_attacks" {
 // draw opponent name
 draw_text_colour(176, 73, opponentPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw opponent
 draw_sprite_ext(Spr_Battle_Pidgey2,0,736,192,5,5,0,c_white,1);
 
 // draw me
 draw_text_colour(662, 302, myPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw my name
 draw_sprite_ext(Spr_Battle_Wani1,0,256,386,5,5,0,c_white,1);

 // draw attack used by opponent
 attack1_text = "Foe " + opponentPkmn + " used " + attack2[enemy_attack_selector] + "!";
 sstring = attack1_text;
 draw_text_colour(67, 503, string_copy(attack1_text,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);      // draws the shadow before the main text
 draw_text_colour(67, 500, string_copy(attack1_text,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
 draw_text_colour(64, 503, string_copy(attack1_text,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
 draw_text_colour(64, 500, string_copy(attack1_text,0,str),c_white,c_white,c_white,c_white,1);                      // so the main text will be in front
 
 // draw skip button
 draw_sprite_ext(Spr_Skip_Text,image_index/4,x+880,562,1,1,0,c_white,1);
}


if stage = "display_enemy_results" {
 // draw opponent name
 draw_text_colour(176, 73, opponentPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw opponent
 draw_sprite_ext(Spr_Battle_Pidgey2,0,736,192,5,5,0,c_white,1);
 
 // draw me
 draw_text_colour(662, 302, myPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw my name
 draw_sprite_ext(Spr_Battle_Wani1,0,256,386,5,5,0,c_white,1);

 // damage feedback 
 if damage &lt;= 15 {
  sstring = "It's not very effective...";
  draw_text_colour(67, 503, string_copy(sstring,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);      // draws the shadow before the main text
  draw_text_colour(67, 500, string_copy(sstring,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
  draw_text_colour(64, 503, string_copy(sstring,0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
  draw_text_colour(64, 500, string_copy(sstring,0,str),c_white,c_white,c_white,c_white,1);                      // so the main text will be in front
 }
 
 // draw skip button
 draw_sprite_ext(Spr_Skip_Text,image_index/4,x+880,562,1,1,0,c_white,1);
}


if stage = "won" {
 // draw opponent name
 draw_text_colour(176, 73, opponentPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw opponent
 draw_sprite_ext(Spr_Battle_Pidgey2,0,736,192,5,5,0,c_white,1);
 
 // draw me
 draw_text_colour(662, 302, myPkmn,c_black,c_black,c_black,c_black,1);
 
 // draw my name
 draw_sprite_ext(Spr_Battle_Wani1,0,256,386,5,5,0,c_white,1);

 // draw text for fainting
 sstring = text[2];
 draw_text_colour(67, 503, string_copy(text[2],0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);           // draws the shadow before the main text
 draw_text_colour(67, 500, string_copy(text[2],0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
 draw_text_colour(64, 503, string_copy(text[2],0,str),c_grey_dark,c_grey_dark,c_grey_dark,c_grey_dark,1);
 draw_text_colour(64, 500, string_copy(text[2],0,str),c_white,c_white,c_white,c_white,1);                           // so the main text will be in front

 // draw skip button
 draw_sprite_ext(Spr_Skip_Text,image_index/4,x+880,562,1,1,0,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
