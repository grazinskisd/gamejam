<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_ash_up</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Initialize variables for the object
direction = 90;

image_centre_x = x + 16;
image_centre_y = y + 16;

target_distance = 24;

target_x = image_centre_x + (target_distance * cos(degtorad(direction)));
target_y = image_centre_y - (target_distance * sin(degtorad(direction)));

target_instance = instance_create(target_x, target_y, ob_target);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// gta2 movement

step_size = 4;
def_image_speed = 0.3;
rotation_step = 5;

up_pressed = keyboard_check(vk_up);
down_pressed = keyboard_check(vk_down);
left_pressed = keyboard_check(vk_left);
right_pressed = keyboard_check(vk_right);

up_collision = place_meeting(x, y-sprite_height, ob_collidable);
down_collision = place_meeting(x, y+sprite_width, ob_collidable);
left_collision = place_meeting(x-sprite_width, y, ob_collidable);
right_collision = place_meeting(x+sprite_width, y, ob_collidable);


if (left_pressed){
    direction = (direction + rotation_step) mod 360;
}

if (right_pressed){
    direction = ((360 - rotation_step) + direction) mod 360;
}

if (direction &lt;= 45 or direction &gt; 315){
    sprite_index = sp_ash_right;
}
if (direction &lt;= 135 and direction &gt; 45){
    sprite_index = sp_ash_up;
}
if (direction &lt;= 225 and direction &gt; 135){
    sprite_index = sp_ash_left;
}
if (direction &lt;= 315 and direction &gt; 225){
    sprite_index = sp_ash_down;
}

if(up_pressed){
    speed = step_size;
    image_speed = def_image_speed;
}else if (down_pressed){
    speed = -step_size;
    image_speed = def_image_speed;
}else{
    speed = 0;
    image_speed = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Target placement

//image_centre_x = x + (sprite_width/2);
//image_centre_y = y + (sprite_height/2);

image_centre_x = x + 12;
image_centre_y = y + 16;

target_x = image_centre_x + (target_distance * cos(degtorad(direction)));
target_y = image_centre_y - (target_distance * sin(degtorad(direction)));

with(target_instance){instance_destroy();}
target_instance = instance_create(target_x, target_y, ob_target); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
